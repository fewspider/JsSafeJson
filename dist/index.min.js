"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.fetchObject=fetchObject,exports.fetchBoolean=fetchBoolean,exports.fetchString=fetchString,exports.fetchNumber=fetchNumber,exports.fetchArray=fetchArray;var _=_interopRequireWildcard(require("underscore"));function _interopRequireWildcard(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)if(Object.prototype.hasOwnProperty.call(t,r)){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(t,r):{};n.get||n.set?Object.defineProperty(e,r,n):e[r]=t[r]}return e.default=t,e}function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function handleRest(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];var n=e?e[0]:{},o=_.clone(e);return o.shift(),{obj:n,strs:o}}function fetchLast(t,e){var r=_.clone(e),n=t[e[0]];return 1===r.length?n:(r.shift(),fetchLast(n,r))}function fetchData(e){var r=e;try{for(var t=arguments.length,n=new Array(1<t?t-1:0),o=1;o<t;o++)n[o-1]=arguments[o];var c=handleRest.apply(void 0,n),a=fetchLast(c.obj,c.strs);_.isNumber(e)&&_.isString(a)&&(a=Number(a)),_typeof(r=a||e)!==_typeof(e)&&(r=e),_.isArray(e)&&!_.isArray(r)&&(r=e)}catch(t){r=e}finally{return r}}function fetchObject(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return fetchData.apply(void 0,[{}].concat(e))}function fetchBoolean(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return fetchData.apply(void 0,[!1].concat(e))}function fetchString(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return fetchData.apply(void 0,[""].concat(e))}function fetchNumber(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return fetchData.apply(void 0,[0].concat(e))}function fetchArray(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return fetchData.apply(void 0,[[]].concat(e))}